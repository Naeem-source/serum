{"ast":null,"code":"import _regeneratorRuntime from\"/home/itxnaeem/Work-IDEO/Serumdex/serum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/itxnaeem/Work-IDEO/Serumdex/serum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/itxnaeem/Work-IDEO/Serumdex/serum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/home/itxnaeem/Work-IDEO/Serumdex/serum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import{Button,Col,Divider,Popover,Row}from'antd';import React,{useState}from'react';import FloatingElement from'./layout/FloatingElement';import styled from'styled-components';import{useBalances,useMarket,useSelectedBaseCurrencyAccount,useSelectedOpenOrdersAccount,useSelectedQuoteCurrencyAccount,useTokenAccounts}from'../utils/markets';import DepositDialog from'./DepositDialog';import{useWallet}from'../utils/wallet';import Link from'./Link';import{settleFunds}from'../utils/send';import{useSendConnection}from'../utils/connection';import{notify}from'../utils/notifications';import StandaloneTokenAccountsSelect from'./StandaloneTokenAccountSelect';import LinkAddress from'./LinkAddress';import{InfoCircleOutlined}from'@ant-design/icons';import{useInterval}from'../utils/useInterval';import{useLocalStorageState}from'../utils/utils';import{AUTO_SETTLE_DISABLED_OVERRIDE}from'../utils/preferences';import{useReferrer}from'../utils/referrer';var RowBox=styled(Row)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-bottom: 20px;\\n\"])));var Tip=styled.p(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  padding-top: 6px;\\n\"])));var ActionButton=styled(Button)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: #2abdd2;\\n  background-color: #212734;\\n  border-width: 0px;\\n\"])));export default function StandaloneBalancesDisplay(){var _useMarket=useMarket(),baseCurrency=_useMarket.baseCurrency,quoteCurrency=_useMarket.quoteCurrency,market=_useMarket.market;var balances=useBalances();var openOrdersAccount=useSelectedOpenOrdersAccount(true);var connection=useSendConnection();var _useWallet=useWallet(),providerUrl=_useWallet.providerUrl,providerName=_useWallet.providerName,wallet=_useWallet.wallet,connected=_useWallet.connected;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),baseOrQuote=_useState2[0],setBaseOrQuote=_useState2[1];var baseCurrencyAccount=useSelectedBaseCurrencyAccount();var quoteCurrencyAccount=useSelectedQuoteCurrencyAccount();var _useTokenAccounts=useTokenAccounts(),_useTokenAccounts2=_slicedToArray(_useTokenAccounts,1),tokenAccounts=_useTokenAccounts2[0];var baseCurrencyBalances=balances&&balances.find(function(b){return b.coin===baseCurrency;});var quoteCurrencyBalances=balances&&balances.find(function(b){return b.coin===quoteCurrency;});var _useLocalStorageState=useLocalStorageState('autoSettleEnabled',true),_useLocalStorageState2=_slicedToArray(_useLocalStorageState,1),autoSettleEnabled=_useLocalStorageState2[0];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),lastSettledAt=_useState4[0],setLastSettledAt=_useState4[1];var _useReferrer=useReferrer(),usdcRef=_useReferrer.usdcRef,usdtRef=_useReferrer.usdtRef;function onSettleFunds(){return _onSettleFunds.apply(this,arguments);}function _onSettleFunds(){_onSettleFunds=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(wallet){_context2.next=3;break;}notify({message:'Wallet not connected',description:'wallet is undefined',type:'error'});return _context2.abrupt(\"return\");case 3:if(market){_context2.next=6;break;}notify({message:'Error settling funds',description:'market is undefined',type:'error'});return _context2.abrupt(\"return\");case 6:if(openOrdersAccount){_context2.next=9;break;}notify({message:'Error settling funds',description:'Open orders account is undefined',type:'error'});return _context2.abrupt(\"return\");case 9:if(baseCurrencyAccount){_context2.next=12;break;}notify({message:'Error settling funds',description:'Open orders account is undefined',type:'error'});return _context2.abrupt(\"return\");case 12:if(quoteCurrencyAccount){_context2.next=15;break;}notify({message:'Error settling funds',description:'Open orders account is undefined',type:'error'});return _context2.abrupt(\"return\");case 15:_context2.prev=15;_context2.next=18;return settleFunds({market:market,openOrders:openOrdersAccount,connection:connection,wallet:wallet,baseCurrencyAccount:baseCurrencyAccount,quoteCurrencyAccount:quoteCurrencyAccount,usdcRef:usdcRef,usdtRef:usdtRef});case 18:_context2.next=23;break;case 20:_context2.prev=20;_context2.t0=_context2[\"catch\"](15);notify({message:'Error settling funds',description:_context2.t0.message,type:'error'});case 23:case\"end\":return _context2.stop();}}},_callee2,null,[[15,20]]);}));return _onSettleFunds.apply(this,arguments);}useInterval(function(){var autoSettle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(AUTO_SETTLE_DISABLED_OVERRIDE||!wallet||!market||!openOrdersAccount||!baseCurrencyAccount||!quoteCurrencyAccount||!autoSettleEnabled)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:if(!(!(baseCurrencyBalances===null||baseCurrencyBalances===void 0?void 0:baseCurrencyBalances.unsettled)&&!(quoteCurrencyBalances===null||quoteCurrencyBalances===void 0?void 0:quoteCurrencyBalances.unsettled))){_context.next=4;break;}return _context.abrupt(\"return\");case 4:if(!(Date.now()-lastSettledAt<15000)){_context.next=6;break;}return _context.abrupt(\"return\");case 6:_context.prev=6;console.log('Settling funds...');setLastSettledAt(Date.now());_context.next=11;return settleFunds({market:market,openOrders:openOrdersAccount,connection:connection,wallet:wallet,baseCurrencyAccount:baseCurrencyAccount,quoteCurrencyAccount:quoteCurrencyAccount,usdcRef:usdcRef,usdtRef:usdtRef});case 11:_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](6);console.log('Error auto settling funds: '+_context.t0.message);return _context.abrupt(\"return\");case 17:console.log('Finished settling funds.');case 18:case\"end\":return _context.stop();}}},_callee,null,[[6,13]]);}));return function autoSettle(){return _ref.apply(this,arguments);};}();connected&&(wallet===null||wallet===void 0?void 0:wallet.autoApprove)&&autoSettleEnabled&&autoSettle();},1000);var formattedBalances=[[baseCurrency,baseCurrencyBalances,'base',market===null||market===void 0?void 0:market.baseMintAddress.toBase58()],[quoteCurrency,quoteCurrencyBalances,'quote',market===null||market===void 0?void 0:market.quoteMintAddress.toBase58()]];return/*#__PURE__*/React.createElement(FloatingElement,{style:{flex:1,paddingTop:10}},formattedBalances.map(function(_ref2,index){var _ref3=_slicedToArray(_ref2,4),currency=_ref3[0],balances=_ref3[1],baseOrQuote=_ref3[2],mint=_ref3[3];return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(Divider,{style:{borderColor:'white'}},currency,' ',mint&&/*#__PURE__*/React.createElement(Popover,{content:/*#__PURE__*/React.createElement(LinkAddress,{address:mint}),placement:\"bottomRight\",title:\"Token mint\",trigger:\"hover\"},/*#__PURE__*/React.createElement(InfoCircleOutlined,{style:{color:'#2abdd2'}}))),connected&&/*#__PURE__*/React.createElement(RowBox,{align:\"middle\",style:{paddingBottom:10}},/*#__PURE__*/React.createElement(StandaloneTokenAccountsSelect,{accounts:tokenAccounts===null||tokenAccounts===void 0?void 0:tokenAccounts.filter(function(account){return account.effectiveMint.toBase58()===mint;}),mint:mint,label:true})),/*#__PURE__*/React.createElement(RowBox,{align:\"middle\",justify:\"space-between\",style:{paddingBottom:12}},/*#__PURE__*/React.createElement(Col,null,\"Wallet balance:\"),/*#__PURE__*/React.createElement(Col,null,balances&&balances.wallet)),/*#__PURE__*/React.createElement(RowBox,{align:\"middle\",justify:\"space-between\",style:{paddingBottom:12}},/*#__PURE__*/React.createElement(Col,null,\"Unsettled balance:\"),/*#__PURE__*/React.createElement(Col,null,balances&&balances.unsettled)),/*#__PURE__*/React.createElement(RowBox,{align:\"middle\",justify:\"space-around\"},/*#__PURE__*/React.createElement(Col,{style:{width:150}},/*#__PURE__*/React.createElement(ActionButton,{block:true,size:\"large\",onClick:function onClick(){return setBaseOrQuote(baseOrQuote);}},\"Deposit\")),/*#__PURE__*/React.createElement(Col,{style:{width:150}},/*#__PURE__*/React.createElement(ActionButton,{block:true,size:\"large\",onClick:onSettleFunds},\"Settle\"))),/*#__PURE__*/React.createElement(Tip,null,\"All deposits go to your\",' ',/*#__PURE__*/React.createElement(Link,{external:true,to:providerUrl},providerName),' ',\"wallet\"));}),/*#__PURE__*/React.createElement(DepositDialog,{baseOrQuote:baseOrQuote,onClose:function onClose(){return setBaseOrQuote('');}}));}","map":{"version":3,"sources":["/home/itxnaeem/Work-IDEO/Serumdex/serum/src/components/StandaloneBalancesDisplay.tsx"],"names":["Button","Col","Divider","Popover","Row","React","useState","FloatingElement","styled","useBalances","useMarket","useSelectedBaseCurrencyAccount","useSelectedOpenOrdersAccount","useSelectedQuoteCurrencyAccount","useTokenAccounts","DepositDialog","useWallet","Link","settleFunds","useSendConnection","notify","StandaloneTokenAccountsSelect","LinkAddress","InfoCircleOutlined","useInterval","useLocalStorageState","AUTO_SETTLE_DISABLED_OVERRIDE","useReferrer","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","baseCurrency","quoteCurrency","market","balances","openOrdersAccount","connection","providerUrl","providerName","wallet","connected","baseOrQuote","setBaseOrQuote","baseCurrencyAccount","quoteCurrencyAccount","tokenAccounts","baseCurrencyBalances","find","b","coin","quoteCurrencyBalances","autoSettleEnabled","lastSettledAt","setLastSettledAt","usdcRef","usdtRef","onSettleFunds","message","description","type","openOrders","autoSettle","unsettled","Date","now","console","log","autoApprove","formattedBalances","baseMintAddress","toBase58","quoteMintAddress","flex","paddingTop","map","index","currency","mint","borderColor","color","paddingBottom","filter","account","effectiveMint","width"],"mappings":"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","sourcesContent":["import { Button, Col, Divider, Popover, Row } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { useInterval } from '../utils/useInterval';\nimport { useLocalStorageState } from '../utils/utils';\nimport { AUTO_SETTLE_DISABLED_OVERRIDE } from '../utils/preferences';\nimport { useReferrer } from '../utils/referrer';\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n  const [autoSettleEnabled] = useLocalStorageState('autoSettleEnabled', true);\n  const [lastSettledAt, setLastSettledAt] = useState<number>(0);\n  const { usdcRef, usdtRef } = useReferrer();\n  async function onSettleFunds() {\n    if (!wallet) {\n      notify({\n        message: 'Wallet not connected',\n        description: 'wallet is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n        usdcRef,\n        usdtRef,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      if (\n        AUTO_SETTLE_DISABLED_OVERRIDE ||\n        !wallet ||\n        !market ||\n        !openOrdersAccount ||\n        !baseCurrencyAccount ||\n        !quoteCurrencyAccount ||\n        !autoSettleEnabled\n      ) {\n        return;\n      }\n      if (\n        !baseCurrencyBalances?.unsettled &&\n        !quoteCurrencyBalances?.unsettled\n      ) {\n        return;\n      }\n      if (Date.now() - lastSettledAt < 15000) {\n        return;\n      }\n      try {\n        console.log('Settling funds...');\n        setLastSettledAt(Date.now());\n        await settleFunds({\n          market,\n          openOrders: openOrdersAccount,\n          connection,\n          wallet,\n          baseCurrencyAccount,\n          quoteCurrencyAccount,\n          usdcRef,\n          usdtRef,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n        return;\n      }\n      console.log('Finished settling funds.');\n    };\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 1000);\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n    [\n      baseCurrency,\n      baseCurrencyBalances,\n      'base',\n      market?.baseMintAddress.toBase58(),\n    ],\n    [\n      quoteCurrency,\n      quoteCurrencyBalances,\n      'quote',\n      market?.quoteMintAddress.toBase58(),\n    ],\n  ];\n\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      {formattedBalances.map(\n        ([currency, balances, baseOrQuote, mint], index) => (\n          <React.Fragment key={index}>\n            <Divider style={{ borderColor: 'white' }}>\n              {currency}{' '}\n              {mint && (\n                <Popover\n                  content={<LinkAddress address={mint} />}\n                  placement=\"bottomRight\"\n                  title=\"Token mint\"\n                  trigger=\"hover\"\n                >\n                  <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n                </Popover>\n              )}\n            </Divider>\n            {connected && (\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\n                <StandaloneTokenAccountsSelect\n                  accounts={tokenAccounts?.filter(\n                    (account) => account.effectiveMint.toBase58() === mint,\n                  )}\n                  mint={mint}\n                  label\n                />\n              </RowBox>\n            )}\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Wallet balance:</Col>\n              <Col>{balances && balances.wallet}</Col>\n            </RowBox>\n            <RowBox\n              align=\"middle\"\n              justify=\"space-between\"\n              style={{ paddingBottom: 12 }}\n            >\n              <Col>Unsettled balance:</Col>\n              <Col>{balances && balances.unsettled}</Col>\n            </RowBox>\n            <RowBox align=\"middle\" justify=\"space-around\">\n              <Col style={{ width: 150 }}>\n                <ActionButton\n                  block\n                  size=\"large\"\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\n                >\n                  Deposit\n                </ActionButton>\n              </Col>\n              <Col style={{ width: 150 }}>\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\n                  Settle\n                </ActionButton>\n              </Col>\n            </RowBox>\n            <Tip>\n              All deposits go to your{' '}\n              <Link external to={providerUrl}>\n                {providerName}\n              </Link>{' '}\n              wallet\n            </Tip>\n          </React.Fragment>\n        ),\n      )}\n      <DepositDialog\n        baseOrQuote={baseOrQuote}\n        onClose={() => setBaseOrQuote('')}\n      />\n    </FloatingElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}