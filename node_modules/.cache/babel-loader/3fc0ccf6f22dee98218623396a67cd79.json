{"ast":null,"code":"import _regeneratorRuntime from\"/home/itxnaeem/Work-IDEO/Serumdex/serum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/itxnaeem/Work-IDEO/Serumdex/serum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/itxnaeem/Work-IDEO/Serumdex/serum/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{getPoolBasket,PoolTransactions}from'@project-serum/pool';import React,{useMemo,useState}from'react';import FloatingElement from'../../../components/layout/FloatingElement';import{Button,Input,Spin,Tabs,Typography}from'antd';import{useAsyncData}from'../../../utils/fetch-loop';import{useConnection}from'../../../utils/connection';import tuple from'immutable-tuple';import PoolBasketDisplay from'./PoolBasketDisplay';import BN from'bn.js';import{notify}from'../../../utils/notifications';import{useWallet}from'../../../utils/wallet';import{useTokenAccounts}from'../../../utils/markets';import{sendTransaction}from'../../../utils/send';var Text=Typography.Text;var TabPane=Tabs.TabPane;export default function PoolCreateRedeemPanel(_ref){var poolInfo=_ref.poolInfo,mintInfo=_ref.mintInfo;return/*#__PURE__*/React.createElement(FloatingElement,{stretchVertical:true},/*#__PURE__*/React.createElement(Tabs,null,/*#__PURE__*/React.createElement(TabPane,{tab:\"Create\",key:\"create\"},/*#__PURE__*/React.createElement(CreateRedeemTab,{poolInfo:poolInfo,mintInfo:mintInfo,tab:\"create\"})),/*#__PURE__*/React.createElement(TabPane,{tab:\"Redeem\",key:\"redeem\"},/*#__PURE__*/React.createElement(CreateRedeemTab,{poolInfo:poolInfo,mintInfo:mintInfo,tab:\"redeem\"}))));}function CreateRedeemTab(_ref2){var poolInfo=_ref2.poolInfo,mintInfo=_ref2.mintInfo,tab=_ref2.tab;var connection=useConnection();var _useWallet=useWallet(),wallet=_useWallet.wallet,connected=_useWallet.connected;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),quantity=_useState2[0],setQuantity=_useState2[1];var _useTokenAccounts=useTokenAccounts(),_useTokenAccounts2=_slicedToArray(_useTokenAccounts,1),tokenAccounts=_useTokenAccounts2[0];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),submitting=_useState4[0],setSubmitting=_useState4[1];var action=useMemo(function(){var parsedQuantity=Math.round(parseFloat(quantity)*Math.pow(10,mintInfo.decimals));if(parsedQuantity>0){if(tab==='create'){return{create:new BN(parsedQuantity)};}else{return{redeem:new BN(parsedQuantity)};}}return null;},[mintInfo.decimals,quantity,tab]);var _useAsyncData=useAsyncData(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!action){_context.next=6;break;}_context.next=3;return getPoolBasket(connection,poolInfo,action);case 3:_context.t0=_context.sent;_context.next=7;break;case 6:_context.t0=null;case 7:return _context.abrupt(\"return\",_context.t0);case 8:case\"end\":return _context.stop();}}},_callee);})),tuple(getPoolBasket,connection,poolInfo.address.toBase58(),action)),_useAsyncData2=_slicedToArray(_useAsyncData,2),basket=_useAsyncData2[0],basketLoaded=_useAsyncData2[1];function findTokenAccount(mint){var account=tokenAccounts===null||tokenAccounts===void 0?void 0:tokenAccounts.find(function(account){return account.effectiveMint.equals(mint);});if(account){return account.pubkey;}throw new Error('No token account for '+mint.toBase58());}var canSubmit=connected&&action&&basket;function onSubmit(_x){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var _PoolTransactions$exe,transaction,signers;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();if(!(!action||!basket||!connected||!canSubmit||!wallet)){_context2.next=3;break;}return _context2.abrupt(\"return\");case 3:setSubmitting(true);_context2.prev=4;_PoolTransactions$exe=PoolTransactions.execute(poolInfo,action,{owner:wallet.publicKey,poolTokenAccount:findTokenAccount(poolInfo.state.poolTokenMint),assetAccounts:poolInfo.state.assets.map(function(asset){return findTokenAccount(asset.mint);})},basket),transaction=_PoolTransactions$exe.transaction,signers=_PoolTransactions$exe.signers;_context2.next=8;return sendTransaction({connection:connection,wallet:wallet,transaction:transaction,signers:signers});case 8:_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](4);console.warn(_context2.t0);notify({message:'Error '+(tab==='create'?'creating':'redeeming')+' pool tokens',description:_context2.t0.message,type:'error'});case 14:_context2.prev=14;setSubmitting(false);return _context2.finish(14);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[4,10,14,17]]);}));return _onSubmit.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(Input,{addonBefore:/*#__PURE__*/React.createElement(React.Fragment,null,\"Quantity\"),value:quantity,onChange:function onChange(e){return setQuantity(e.target.value.trim());},style:{marginBottom:24}}),/*#__PURE__*/React.createElement(\"div\",null,!basket?basketLoaded?null:/*#__PURE__*/React.createElement(Spin,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Text,null,tab==='create'?'Cost':'Proceeds',\": \"),/*#__PURE__*/React.createElement(Text,{type:\"secondary\"},\"(indicative only)\"),/*#__PURE__*/React.createElement(PoolBasketDisplay,{poolInfo:poolInfo,basket:basket}))),/*#__PURE__*/React.createElement(Button,{htmlType:\"submit\",type:\"primary\",disabled:!canSubmit||submitting},!connected?'Wallet not connected':'Submit'));}","map":{"version":3,"sources":["/home/itxnaeem/Work-IDEO/Serumdex/serum/src/pages/pools/PoolPage/PoolCreateRedeemPanel.tsx"],"names":["getPoolBasket","PoolTransactions","React","useMemo","useState","FloatingElement","Button","Input","Spin","Tabs","Typography","useAsyncData","useConnection","tuple","PoolBasketDisplay","BN","notify","useWallet","useTokenAccounts","sendTransaction","Text","TabPane","PoolCreateRedeemPanel","poolInfo","mintInfo","CreateRedeemTab","tab","connection","wallet","connected","quantity","setQuantity","tokenAccounts","submitting","setSubmitting","action","parsedQuantity","Math","round","parseFloat","decimals","create","redeem","address","toBase58","basket","basketLoaded","findTokenAccount","mint","account","find","effectiveMint","equals","pubkey","Error","canSubmit","onSubmit","e","preventDefault","execute","owner","publicKey","poolTokenAccount","state","poolTokenMint","assetAccounts","assets","map","asset","transaction","signers","console","warn","message","description","type","target","value","trim","marginBottom"],"mappings":"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","sourcesContent":["import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\nimport React, { useMemo, useState } from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport { PublicKey } from '@solana/web3.js';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nimport BN from 'bn.js';\nimport { notify } from '../../../utils/notifications';\nimport { useWallet } from '../../../utils/wallet';\nimport { useTokenAccounts } from '../../../utils/markets';\nimport { sendTransaction } from '../../../utils/send';\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\ninterface PoolCreateRedeemPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nexport default function PoolCreateRedeemPanel({\n  poolInfo,\n  mintInfo,\n}: PoolCreateRedeemPanel) {\n  return (\n    <FloatingElement stretchVertical>\n      <Tabs>\n        <TabPane tab=\"Create\" key=\"create\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"create\"\n          />\n        </TabPane>\n        <TabPane tab=\"Redeem\" key=\"redeem\">\n          <CreateRedeemTab\n            poolInfo={poolInfo}\n            mintInfo={mintInfo}\n            tab=\"redeem\"\n          />\n        </TabPane>\n      </Tabs>\n    </FloatingElement>\n  );\n}\n\ninterface CreateRedeemInnerPanel {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n  tab: string;\n}\n\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\n  const connection = useConnection();\n  const { wallet, connected } = useWallet();\n  const [quantity, setQuantity] = useState('');\n  const [tokenAccounts] = useTokenAccounts();\n  const [submitting, setSubmitting] = useState(false);\n\n  const action = useMemo(() => {\n    const parsedQuantity = Math.round(\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\n    );\n    if (parsedQuantity > 0) {\n      if (tab === 'create') {\n        return { create: new BN(parsedQuantity) };\n      } else {\n        return { redeem: new BN(parsedQuantity) };\n      }\n    }\n    return null;\n  }, [mintInfo.decimals, quantity, tab]);\n\n  const [basket, basketLoaded] = useAsyncData(\n    async () =>\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\n  );\n\n  function findTokenAccount(mint: PublicKey): PublicKey {\n    const account = tokenAccounts?.find((account) =>\n      account.effectiveMint.equals(mint),\n    );\n    if (account) {\n      return account.pubkey;\n    }\n    throw new Error('No token account for ' + mint.toBase58());\n  }\n\n  const canSubmit = connected && action && basket;\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    if (!action || !basket || !connected || !canSubmit || !wallet) {\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const { transaction, signers } = PoolTransactions.execute(\n        poolInfo,\n        action,\n        {\n          owner: wallet.publicKey,\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\n          assetAccounts: poolInfo.state.assets.map((asset) =>\n            findTokenAccount(asset.mint),\n          ),\n        },\n        basket,\n      );\n      await sendTransaction({ connection, wallet, transaction, signers });\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message:\n          'Error ' +\n          (tab === 'create' ? 'creating' : 'redeeming') +\n          ' pool tokens',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Input\n        addonBefore={<>Quantity</>}\n        value={quantity}\n        onChange={(e) => setQuantity(e.target.value.trim())}\n        style={{ marginBottom: 24 }}\n      />\n      <div>\n        {!basket ? (\n          basketLoaded ? null : (\n            <Spin />\n          )\n        ) : (\n          <>\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\n            <Text type=\"secondary\">(indicative only)</Text>\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\n          </>\n        )}\n      </div>\n      <Button\n        htmlType=\"submit\"\n        type=\"primary\"\n        disabled={!canSubmit || submitting}\n      >\n        {!connected ? 'Wallet not connected' : 'Submit'}\n      </Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}